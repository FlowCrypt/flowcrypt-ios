version: v1.0
name: FlowCrypt iOS App
agent:
  machine:
    type: a1-standard-4
    os_image: macos-xcode13
execution_time_limit:
  minutes: 120
auto_cancel:
  running:
    when: branch != 'master'
blocks:
  - name: Build
    dependencies: []
    run:
      when: 'change_in(''/'', {exclude: [''/Core/package.json'', ''/Core/package-lock.json'']})'
    execution_time_limit:
      minutes: 115
    task:
      env_vars:
        - name: LANG
          value: en_US.UTF-8
        - name: SEMAPHORE_GIT_DIR
          value: /Users/semaphore/git/flowcrypt-ios
      prologue:
        commands:
          - checkout && cd ~/git/flowcrypt-ios/ && cache restore && make dependencies && cache store
      jobs:
        - name: Build Xcode Project
          commands:
            - xcversion select 13.4.1
            - bundle exec fastlane build
      epilogue:
        always:
          commands:
            - cd appium && cache store FlowCrypt-$SEMAPHORE_GIT_SHA.app FlowCrypt.app
  - name: TypeScript + Swift tests
    dependencies: []
    run:
      when: 'change_in(''/'', {exclude: [''/appium/package.json'', ''/appium/package-lock.json'']})'
    execution_time_limit:
      minutes: 45
    task:
      env_vars:
        - name: LANG
          value: en_US.UTF-8
        - name: SEMAPHORE_GIT_DIR
          value: /Users/semaphore/git/flowcrypt-ios
      prologue:
        commands:
          - checkout && cd ~/git/flowcrypt-ios/ && cache restore && make dependencies && cache store
          - npm install -g npm@8.14.0
          - ( cache restore common-npm && npm install && cache store common-npm node_modules )
          - ( cd Core && cache restore core-npm && npm install && cache store core-npm node_modules )
          - ( cd appium && cache restore appium-npm && npm install && cache store appium-npm node_modules )
      jobs:
        - name: TypeScript tests + code quality
          commands:
            - cd Core
            - npm test
            - npm run eslint
            - cd ../appium
            - npm run lint
        - name: Swift tests
          commands:
            - bundle exec fastlane test
  - name: UI Tests
    dependencies:
      - Build
    task:
      env_vars:
        - name: LANG
          value: en_US.UTF-8
        - name: SEMAPHORE_GIT_DIR
          value: /Users/semaphore/git/flowcrypt-ios
      prologue:
        commands:
          - checkout && cd ~/git/flowcrypt-ios/ && cache restore && make dependencies
          - mv ~/appium-env ~/git/flowcrypt-ios/appium/.env
          - sem-version node 16 && cache restore appium-npm && cd ./appium && npm i && cd .. && cache store appium-npm appium/node_modules
          - cd appium
          - cache restore FlowCrypt-$SEMAPHORE_GIT_SHA.app
      epilogue:
        always:
          commands:
            - artifact push job ~/git/flowcrypt-ios/appium/tmp
            - test-results publish ~/git/flowcrypt-ios/appium/tmp/test-results
        on_fail:
          commands:
            - artifact push job ~/Library/Logs/DiagnosticReports/FlowCrypt_*
            - artifact push job ~/git/flowcrypt-ios/appium/video/*.mp4
      jobs:
        - name: Run Mock inbox tests
          commands:
            - npm run-script test.mock.inbox
        - name: Run Mock compose tests
          commands:
            - npm run-script test.mock.compose
        - name: Run Mock setup tests
          commands:
            - npm run-script test.mock.setup
        - name: Run Mock other tests + Run Live tests
          commands:
            - npm run-script test.mock.login
            - npm run-script test.mock.settings
            - 'wget https://flowcrypt.s3.eu-central-1.amazonaws.com/release/flowcrypt-ios-old-version-for-ci-storage-compatibility-2022-05-09.zip -P ~/git/flowcrypt-ios/appium'
            - unzip flowcrypt-ios-*.zip
            - npm run-script test.live.all
      secrets:
        - name: flowcrypt-ios-ci-secrets
    run:
      when: 'change_in(''/'', {exclude: [''/Core/package.json'', ''/Core/package-lock.json'']})'
after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
